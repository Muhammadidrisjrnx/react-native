import React, { Component } from 'react';
import {View, Text, TouchableOpacity, ToastAndroid, ScrollView} from 'react-native';
import * as Animatable from 'react-native-animatable';
import Accordion from 'react-native-collapsible/Accordion';
import {Dropdown} from 'react-native-material-dropdown';
import DateTimePicker from 'react-native-modal-datetime-picker';
import Moment from 'moment';
import {FormInput,FormLabel,FormValidationMessage} from 'react-native-elements'

import styles from './leadDetail.style.js';

const LEVEL = [
    {
      value:'1',
      label:'EFC'
    },
    {
      value:'2',
      label:'BM'
    },
    {
      value:'3',
      label:'ABD'
    },
    {
      value:'4',
      label:'AD'
  }
];

const BRANCH = [
    {
      value:'1',
      label:'Jakarta',
      desc:''
    },
    {
      value:'2',
      label:'Medan',
      desc:''
    },
    {
      value:'3',
      label:'Balikpapan',
      desc:''
    },
    {
      value:'4',
      label:'Bandung',
      desc:''
    }
];

const SEX = [
  {
    value:'M',
    label:'Pria'
  },
  {
    value:'F',
    label:'Perempuan'
  }
];

const RELIGION = [
  {
    value:'1',
    label:'Islam'
  },
  {
    value:'2',
    label:'Kristen Katolik'
  },
  {
    value:'3',
    label:'Kristen Protestan'
  },
  {
    value:'4',
    label:'Buddha'
  },
  {
    value:'5',
    label:'Hindu'
  },
  {
    value:'6',
    label:'Konghucu'
  }
];

const EDUCATION = [
  {
    value:'1',
    label:'SD'
  },
  {
    value:'2',
    label:'SLTP'
  },
  {
    value:'3',
    label:'SLTA'
  },
  {
    value:'4',
    label:'D1'
  },
  {
    value:'5',
    label:'D2'
  },
  {
    value:'6',
    label:'D3'
  },
  {
    value:'7',
    label:'S1'
  },
  {
    value:'8',
    label:'S2'
  },
  {
    value:'9',
    label:'S3'
  }
];

const SECTIONS = [
  {
    title: 'Identitas Calon Agent',
    content: 'Lorem ipsum...'
  },
  {
    title: 'Informasi Tambahan',
    content: 'Lorem ipsum...'
  },
  {
    title: 'Pengalaman Terakhir & Informasi Bank',
    content: 'Lorem ipsum...'
  },
  {
    title: 'Perekrut dan Leader',
    content: 'Lorem ipsum...'
  },
  {
    title: 'Dokumen',
    content: 'Lorem ipsum...'
  }
];

export default class LeadDetail extends Component {
  state = {
    activeSections: [],
    joinDate:'',
    focusedPicker:''
  };

  constructor(props){
      super(props);

      this.onDropDownChangeText = this.onDropDownChangeText.bind(this);
      this.onTimePickerFocus = this.onTimePickerFocus.bind(this);

      this.levelRef = this.updateRef.bind(this, 'level');
      this.branchRef = this.updateRef.bind(this, 'branch');
      this.sexRef = this.updateRef.bind(this, 'sex');
      this.religionRef = this.updateRef.bind(this, 'religion');
      this.educationRef = this.updateRef.bind(this, 'education');
      this.joinDateRef = this.updateRef.bind(this, 'joinDate');
      this.joinDateButtonRef = this.updateRef.bind(this, 'joinDateButton');
      this.dobRef = this.updateRef.bind(this, 'dob');
      this.dobButtonRef = this.updateRef.bind(this, 'dobButton');
      this.typographyRef = this.updateRef.bind(this, 'typography');
      this._renderAgentSection = this.updateRef.bind(this, 'renderAgentSection');
      this._renderContent = this._renderContent.bind(this);
      this._handleDatePicked = this._handleDatePicked.bind(this);
      //this.onTimePickerFocus = this.onTimePickerFocus.bind(this);
      //this._renderContent = this.updateRef.bind(this, 'renderContent');

      this.state = {
        isDateTimePickerVisible:false,
        level:'',
        branch:'',
        sex:'',
        religion:'',
        dob:''
      };
  }

  onDropDownChangeText = (text) => {
    ['level', 'branch', 'sample', 'typography']
      .map((name) => ({ name, ref: this[name] }))
      .filter(({ ref }) => ref && ref.isFocused())
      .forEach(({ name, ref }) => {
        this.setState({ [name]: text });
      });
  }

  // onDatePickerChangeText = (text) => {
  //   ['dobButton']
  //     .map((name) => ({ name, ref: this[name] }))
  //     .filter(({ ref }) => ref && ref.isFocused())
  //     .forEach(({ name, ref }) => {
  //       this.setState({ [`${name.substr(0,name.length-6)}`]: text });
  //     });
  // }

  onTimePickerFocus = () => {
    // ['level']
    // .map((name) => ({ name, ref: this[name] }))
    // .filter(({ ref }) => ref && ref.isFocused())
    // .forEach(({ name, ref }) => {
    //   this.setState({ [name]: date });
    // });
    this.setState({
      focusedPicker:this.props.children
    })

    this._showDateTimePicker();
  }

  updateRef = (name, ref) => {
    this[name] = ref;
  }

  componentWillMount(){
      this._updateSections([0]);
  }

  _showDateTimePicker = () => this.setState({ isDateTimePickerVisible: true });

  _hideDateTimePicker = () => this.setState({ isDateTimePickerVisible: false });

  _handleDatePicked = (date) => {

    //ToastAndroid.show(this['dobButton']?'true':'false'.SHORT);
    //console.log('A date has been picked: ', date);


    this.setState({
      joinDate: Moment(date).format('DD MMM YYYY')
    });

    this._hideDateTimePicker();
  };

  _renderSectionTitle = section => {
    return (
      <View style={styles.content}>
        <Text>{section.content}</Text>
      </View>
    );
  };

  _renderHeader(section, index, isActive, sections) {
    return (
      <Animatable.View
        duration={300}
        transition="backgroundColor"
        style={{ backgroundColor: (isActive ? 'rgba(255,255,255,1)' : 'rgba(245,252,255,1)') }}>
        <Text style={styles.headerText}>{section.title}</Text>
      </Animatable.View>
    );
  }

  _renderAgentSection = () =>{
      return(
          <View>
              {/* <Dropdown
                    label='Jabatan'
                    data={LEVEL}/> */}
              {/* <FormValidationMessage>Error message</FormValidationMessage>
              <FormLabel>Name</FormLabel>
              <FormInput />
              <FormValidationMessage>Error message</FormValidationMessage> */}
              <Text>Asd</Text>
          </View>
      )
  }

  _renderContent(section, i, isActive, sections) {
    let {level, branch, joinDate, dob, sex, religion, education} = this.state;

    return (
        //<this._renderAgentSection/>
      <Animatable.View
        duration={500}
        transition="backgroundColor"
        style={{ backgroundColor: (isActive ? 'rgba(255,255,255,1)' : 'rgba(245,252,255,1)') }}>
        <Dropdown
            ref={this.levelRef}
            label='Jabatan'
            data={LEVEL}
            value={level}
            onChangeText={this.onDropDownChangeText}/> 
        <Dropdown
            ref={this.branchRef}
            label='Cabang'
            data={BRANCH}
            value={branch}
            onChangeText={this.onDropDownChangeText}/> 
        <FormLabel>Nama Lengkap Agent (Sesuai Dengan KTP)</FormLabel>
        <FormInput />
        <View style={{flexDirection:'row'}}>
            <View style={{flex:1}}>
              <FormLabel>Kode</FormLabel>
              <FormInput />
            </View>
            <TouchableOpacity ref={this.joinDateButtonRef} style={{flex:1}}  onPress={this.onTimePickerFocus}>
              <FormLabel>Join Date </FormLabel>
              <FormInput ref={this.joinDateRef} editable={false} value={joinDate}/>
            </TouchableOpacity>
        </View>
        <FormLabel>Agent Status</FormLabel>
        <FormInput />
        <View style={{flexDirection:'row'}}>
          <View style={{flex:1}}>
            <FormLabel>Tempat Lahir</FormLabel>
            <FormInput />
          </View>
          <TouchableOpacity ref={this.dobButtonRef} style={{flex:1}}  onPress={this.onTimePickerFocus}>
            <FormLabel>Tanggal Lahir</FormLabel>
            <FormInput ref={this.dobRef} editable={false} value={dob}/>
          </TouchableOpacity>
        </View>
        <Dropdown
            ref={this.sexRef}
            label='Jenis Kelamin'
            data={SEX}
            value={sex}
            onChangeText={this.onDropDownChangeText}/>
        <FormLabel>Alamat</FormLabel>
        <FormInput />
        <View style={{flexDirection:'row'}}>
          <View style={{flex:1}}>
            <FormLabel>RT/RW/Kelurahan</FormLabel>
            <FormInput />
          </View>
          <View style={{flex:1}}>
            <FormLabel>Kecamatan</FormLabel>
            <FormInput />
          </View>
        </View>
        <FormLabel>Kota</FormLabel>
        <FormInput />
        <Dropdown
            ref={this.religionRef}
            label='Agama'
            data={RELIGION}
            value={religion}
            onChangeText={this.onDropDownChangeText}/>
        <FormLabel>No. KTP</FormLabel>
        <FormInput />
        <Dropdown
            ref={this.educationRef}
            label='Pendidikan Terakhir'
            data={EDUCATION}
            value={education}
            onChangeText={this.onDropDownChangeText}/>
      </Animatable.View>
    );
  }

  _updateSections = activeSections => {
    ToastAndroid.show(JSON.stringify(activeSections),ToastAndroid.SHORT);
    this.setState({ activeSections });
  };

  render() {
    return (
      <ScrollView style={{flex:1}}>
        <Accordion
          sections={SECTIONS}
          activeSections={this.state.activeSections}
          renderHeader={this._renderHeader}
          renderContent={this._renderContent}
          onChange={this._updateSections}
        />
        <DateTimePicker
            isVisible={this.state.isDateTimePickerVisible}
            onConfirm={this._handleDatePicked}
            onCancel={this._hideDateTimePicker}
          />
      </ScrollView>
    );
  }
}

